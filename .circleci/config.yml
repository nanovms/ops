version: 2.1

orbs:
  win: circleci/windows@1.0.0

jobs:
  build:
    docker:
      - image: cimg/go:1.19.5
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: go install golang.org/x/lint/golint@latest
      - run: sudo apt-get update
      - run: sudo apt-get install qemu-system-x86
      - run: go install github.com/jstemmer/go-junit-report@latest
      - run: wget https://github.com/bufbuild/buf/releases/download/v1.13.1/buf-Linux-x86_64 && sudo mv buf-Linux-x86_64 /usr/bin/buf && sudo chmod +x /usr/bin/buf
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - run: curl -L https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.15.0/protoc-gen-openapiv2-v2.15.0-linux-x86_64 -o ~/go/bin/protoc-gen-openapiv2 && chmod +x ~/go/bin/protoc-gen-openapiv2
      - run: curl -L https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.15.0/protoc-gen-grpc-gateway-v2.15.0-linux-x86_64 -o ~/go/bin/protoc-gen-grpc-gateway && chmod +x ~/go/bin/protoc-gen-grpc-gateway
      - run: make deps
      - run: make generate
      - run: ./hack/verify-gofmt.sh
      - run: ./hack/verify-govet.sh
      - run: ./hack/verify-golint.sh
      - run: mkdir -p $TEST_RESULTS
      - run: go run ops.go update
      - run:
          name : run unit tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out
  build-mac:
    macos:
        xcode: "14.0.0"
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - run: brew update && brew install go && brew tap nanovms/homebrew-qemu && brew install nanovms/homebrew-qemu/qemu && brew install wget && brew install protoc-gen-go-grpc
      - run: go install github.com/jstemmer/go-junit-report@latest
      - run: brew install bufbuild/buf/buf
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - run: curl -L https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.15.0/protoc-gen-openapiv2-v2.15.0-darwin-x86_64 -o ~/go/bin/protoc-gen-openapiv2 && chmod +x ~/go/bin/protoc-gen-openapiv2
      - run: curl -L https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.15.0/protoc-gen-grpc-gateway-v2.15.0-darwin-x86_64 -o ~/go/bin/protoc-gen-grpc-gateway && chmod +x ~/go/bin/protoc-gen-grpc-gateway
      - run: make deps
      - run: make generate PATH=$PATH:~/go/bin
      - run: mkdir -p $TEST_RESULTS
      - run: go run ops.go update
      - run:
          name: macbuild
          command: |
            trap "~/go/bin/go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out
  nightly-build:
    docker:
      - image: cimg/go:1.19.5
    steps:
      - checkout
      - run: wget https://github.com/bufbuild/buf/releases/download/v1.13.1/buf-Linux-x86_64 && sudo mv buf-Linux-x86_64 /usr/bin/buf && sudo chmod +x /usr/bin/buf
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - run: curl -L https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.15.0/protoc-gen-openapiv2-v2.15.0-linux-x86_64 -o ~/go/bin/protoc-gen-openapiv2 && chmod +x ~/go/bin/protoc-gen-openapiv2
      - run: curl -L https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.15.0/protoc-gen-grpc-gateway-v2.15.0-linux-x86_64 -o ~/go/bin/protoc-gen-grpc-gateway && chmod +x ~/go/bin/protoc-gen-grpc-gateway
      - run: make generate
      - run: go build
      - run: echo "deb http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      - run: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      - run: sudo apt-get update && sudo apt-get install google-cloud-sdk

      - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      - run: gcloud config set project ${GOOGLE_PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run: md5sum ops | awk '{print $1}' > ops-linux-nightly.md5
      - run: gsutil cp ops gs://cli/linux/release/nightly/ops
      - run: gsutil cp ops-linux-nightly.md5 gs://cli/linux/release/nightly/ops-linux-nightly.md5
      - run: gsutil acl ch -u AllUsers:R gs://cli/linux/release/nightly/ops
      - run: gsutil acl ch -u AllUsers:R gs://cli/linux/release/nightly/ops-linux-nightly.md5

workflows:
  version: 2
  commit-workflow:
    jobs:
      - build
      - build-mac
  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *" # 7PM PST
          filters:
            branches:
              only:
                - master
    jobs:
      - nightly-build
